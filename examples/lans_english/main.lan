PART main
	RULE sentence	$Sentence
END

PART Conj
	RULE and	and-conj
	RULE but	but-conj
	RULE sec	;-conj
END

PART Sentence
	# :0 | missing
	# :1 | conj fold
	
	# RULE 도치 $부정어 do/does/did S V
	# RULE 도치 $부정어 $조동사 S V
	# RULE 도치 $부정어 have/has/had S V( pp )
	# RULE 도치 $부정어 $Be동사 S
	
	# RULE 보어도치 $AP/P $Be동사 $S
	# RULE 보어도치 such $Be동사 $S $ThatConjP
	# RULE 보어도치 so $AP/P $Be동사 $S $ThatConjP

	# RULE 장소부사구도치 $장소부사구 $V( s1 ) $S(pronoun X)
	# RULE 장소부사구도치 $장소부사구 $S(pronoun) $V( s1 )

	# RULE 목적어도치 $O $S $V

	IF :1 0
		RULE conj	$Sentence( :0 x ) $Conj $Sentence( :0 )
	END

	IF :0 0
		RULE Si		$S( 1 ) $VP( s1 1 )
		RULE Si		$S( m ) $VP( s1 m )

		# RULE Sii	$S( 1 ) $V( s2 1 ) $Comp
		# RULE Sii	$S( m ) $V( s2 m ) $Comp

		RULE Siii	$S( 1 ) $VP( s3 1 )
		RULE Siii	$S( m ) $VP( s3 m )

		# RULE Siv	$S( 1 ) $V( s4 1 ) $NP( IO ) $NP( DO )
		# RULE Siv	$S( m ) $V( s4 m ) $NP( IO ) $NP( DO )

		RULE Sv		$S( 1 ) $VP( s5 1 )
		RULE Sv		$S( m ) $VP( s5 m )

		RULE ithl	it-it $BeV( 3 1 ) $S that-rel $Sentence( S )
		RULE ithl	it-it $BeV( 3 1 ) $O that-rel $Sentence( O )
	END
	IF :0 S
		RULE Si		$VP( s1 1 )
		RULE Si		$VP( s1 m )
		RULE Siii	$VP( s3 1 )
		RULE Siii	$VP( s3 m )
		RULE Sv		$VP( s5 1 )
		RULE Sv		$VP( s5 m )
	END
	IF :0 O
		RULE Si		$S( 1 ) $VP( s1 1 0 O )
		RULE Si		$S( m ) $VP( s1 m 0 O )
		RULE Siii	$S( 1 ) $VP( s3 1 0 O )
		RULE Siii	$S( m ) $VP( s3 m 0 O )
		RULE Sv		$S( 1 ) $VP( s5 1 0 O )
		RULE Sv		$S( m ) $VP( s5 m 0 O )
	END
END

PART AP
	# :0 | type

	IF :0 0
		RULE adj	*adj
	END

	IF :0 det
		RULE adj	*adj[:0=det]
		RULE nppos	$NP( POS )
		RULE next	$AP( num )
	END
	IF :0 ~ num siz prp new col nat mat
		RULE adj	*adj[:0=:0]
		UNLESS :0 mat
			RULE adj	*adj[:0=:0] [:0=num]$AP( siz ) [:0=siz]$AP( prp ) [:0=prp]$AP( new ) [:0=new]$AP( col ) [:0=col]$AP( nat ) [:0=nat]$AP( mat )
			RULE next	[:0=num]$AP( siz ) [:0=siz]$AP( prp ) [:0=prp]$AP( new ) [:0=new]$AP( col ) [:0=col]$AP( nat ) [:0=nat]$AP( mat )
		END
	END
END

PART AdvP
	# 출처: 명사, 관사, 대명사 프린트 p. 2
	RULE pabs	$Prep( with ) *noun[:1=abstract]
	RULE pabs	$Prep( by ) *noun[:1=abstract]
	RULE pabs	$Prep( in ) *noun[:1=abstract]
	RULE pabs	$Prep( on ) *noun[:1=abstract]
	RULE pabs	$Prep( to ) *noun[:1=abstract]
	# RULE adv	*adverb
END

PART Quantifier
	# :0 | uctype
	# :1 | count:1/m/_
	
	IF :0 cnt
		IF :1 1
			RULE quant	*quantifier[:0=cnt&:1=1]
		END
		IF :1 m
			RULE quant	*quantifier[:0=cnt&:1=m]
			RULE quant	*quantmeasure[:0=0] *prep[:0=of]
			RULE quant	a-det *quantmeasure[:0=a] *prep[:0=of]

			RULE quant	*quantifier[:0=both]
		END
	END
	UNLESS :0 cnt
		RULE quant	*quantifier[:0=ucnt]
		RULE quant	*quantifier[:0=both]
	END
END